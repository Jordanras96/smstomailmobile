package com.example.smstomail

/**
 * Configuration Google Identity Services pour l'application SMS to Mail
 * 
 * IMPORTANT: Utilise Google Identity Services avec OAuth 2.0
 * Configuration bas√©e sur le projet: mythical-sky-448106-v4
 * 
 * Scopes requis:
 * - openid: Authentification de base
 * - email: Acc√®s √† l'adresse email du compte
 * - profile: Informations de profil utilisateur  
 * - gmail.send: Envoi d'emails via Gmail API
 */
object OAuth2Config {
    
    // Informations du projet Google Cloud
    const val PROJECT_ID = "mythical-sky-448106-v4"
    
    // Client ID Android OAuth 2.0 (existant et configur√©)
    const val ANDROID_CLIENT_ID = "447857613313-itn45fqo3jqeh51r2o3lumnt5ihdvqrk.apps.googleusercontent.com"
    
    // Client ID Web pour server-side auth (‚úÖ CONFIGUR√â)
    const val WEB_CLIENT_ID = "447857613313-0vjdrgksgn4391bb6r23jeg7cok4ac1q.apps.googleusercontent.com"
    
    // Endpoints Google OAuth2 (bas√©s sur le projet configur√©)
    const val AUTH_URI = "https://accounts.google.com/o/oauth2/auth"
    const val TOKEN_URI = "https://oauth2.googleapis.com/token"
    const val AUTH_PROVIDER_CERT_URL = "https://www.googleapis.com/oauth2/v1/certs"
    
    // Scopes OAuth 2.0 requis pour l'application (configur√©s dans Google Cloud Console)
    const val SCOPE_OPENID = "openid"
    const val SCOPE_EMAIL = "https://www.googleapis.com/auth/userinfo.email" 
    const val SCOPE_PROFILE = "https://www.googleapis.com/auth/userinfo.profile"
    const val SCOPE_GMAIL_SEND = "https://www.googleapis.com/auth/gmail.send"
    
    // Liste de tous les scopes requis (correspondent aux scopes coch√©s dans Google Cloud Console)
    val REQUIRED_SCOPES = listOf(
        SCOPE_OPENID,
        SCOPE_EMAIL, 
        SCOPE_PROFILE,
        SCOPE_GMAIL_SEND
    )
    
    // Cha√Æne de scopes pour Google Sign-In
    val SCOPES_STRING = REQUIRED_SCOPES.joinToString(" ")
    
    /**
     * V√©rifie si la configuration OAuth 2.0 est compl√®te
     */
    fun isConfigured(): Boolean {
        return ANDROID_CLIENT_ID.endsWith(".apps.googleusercontent.com") &&
               ANDROID_CLIENT_ID.isNotBlank() &&
               WEB_CLIENT_ID != "447857613313-CR√âER_CLIENT_WEB.apps.googleusercontent.com" &&
               WEB_CLIENT_ID.endsWith(".apps.googleusercontent.com") &&
               PROJECT_ID.isNotBlank()
    }
    
    /**
     * Affiche les informations de configuration pour debug
     */
    fun getConfigInfo(): String {
        return """
            CONFIGURATION SMS TO MAIL:
            - Projet: $PROJECT_ID
            - Client Android: ${ANDROID_CLIENT_ID.take(20)}...
            - Client Web: ${if (isWebClientConfigured()) "‚úÖ Configur√©" else "‚ùå √Ä cr√©er"}
            - Scopes: ${REQUIRED_SCOPES.size} configur√©s
        """.trimIndent()
    }
    
    /**
     * V√©rifie si le client Web est configur√©
     */
    fun isWebClientConfigured(): Boolean {
        return WEB_CLIENT_ID.contains("-0vjdrgksgn4391bb6r23jeg7cok4ac1q.")
    }
    
    /**
     * √âtat de la configuration compl√®te
     */
    const val CONFIGURATION_STATUS = """
        ‚úÖ CONFIGURATION OAUTH 2.0 COMPL√àTE:
        
        ‚úÖ Projet Google Cloud: mythical-sky-448106-v4
        ‚úÖ API Gmail: Activ√©e  
        ‚úÖ Client Android: 447857613313-itn45fqo3jqeh51r2o3lumnt5ihdvqrk
        ‚úÖ Client Web: 447857613313-0vjdrgksgn4391bb6r23jeg7cok4ac1q
        ‚úÖ Scopes configur√©s: openid, email, profile, gmail.send
        ‚úÖ Sites autoris√©s:
           - https://smstomail.vercel.app
           - https://jordanras96.github.io/smstomail/
        
        üì± L'application est pr√™te pour l'authentification OAuth 2.0 !
        
        üîß RECOMMANDATION: D√©sactivez le "sch√©ma d'URI personnalis√©" 
        dans Google Cloud Console car Google Identity Services ne l'utilise pas.
    """
}